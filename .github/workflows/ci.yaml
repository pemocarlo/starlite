name: ci
on:
  pull_request:
  push:
    branches:
      - main
      - test-ci
jobs:
  validate:
    runs-on: ubuntu-latest
    env:
      SETUPTOOLS_USE_DISTUTILS: stdlib
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: pre-commit/action@v3.0.0
  test:
    needs: validate
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.7", "3.10"]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: v1-venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            v1-venv-${{ runner.os }}-${{ matrix.python-version }}
            v1-venv-${{ runner.os }}
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      - name: Set pythonpath
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV
      - name: Test
        if: matrix.python-version != '3.10'
        run: poetry run pytest
      - name: Test with Coverage
        if: matrix.python-version == '3.10'
        run: poetry run pytest examples tests --cov=starlite --cov=examples --cov-report=xml
      - uses: actions/upload-artifact@v3
        if: matrix.python-version == '3.10'
        with:
          name: coverage-xml
          path: coverage.xml

  docs:
    needs: test
    runs-on: ubuntu-latest
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - run: pip install mkdocs-material mkdocstrings[python] black
      - run: mkdocs gh-deploy --force
